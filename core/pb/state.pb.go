// Code generated by protoc-gen-go. DO NOT EDIT.
// source: state.proto

package corepb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WitnessState struct {
	TermId               uint64   `protobuf:"varint,1,opt,name=term_id,json=termId,proto3" json:"term_id,omitempty"`
	Witnesses            []*Group `protobuf:"bytes,2,rep,name=witnesses,proto3" json:"witnesses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WitnessState) Reset()         { *m = WitnessState{} }
func (m *WitnessState) String() string { return proto.CompactTextString(m) }
func (*WitnessState) ProtoMessage()    {}
func (*WitnessState) Descriptor() ([]byte, []int) {
	return fileDescriptor_a888679467bb7853, []int{0}
}

func (m *WitnessState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WitnessState.Unmarshal(m, b)
}
func (m *WitnessState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WitnessState.Marshal(b, m, deterministic)
}
func (m *WitnessState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WitnessState.Merge(m, src)
}
func (m *WitnessState) XXX_Size() int {
	return xxx_messageInfo_WitnessState.Size(m)
}
func (m *WitnessState) XXX_DiscardUnknown() {
	xxx_messageInfo_WitnessState.DiscardUnknown(m)
}

var xxx_messageInfo_WitnessState proto.InternalMessageInfo

func (m *WitnessState) GetTermId() uint64 {
	if m != nil {
		return m.TermId
	}
	return 0
}

func (m *WitnessState) GetWitnesses() []*Group {
	if m != nil {
		return m.Witnesses
	}
	return nil
}

type Group struct {
	Master               string   `protobuf:"bytes,1,opt,name=master,proto3" json:"master,omitempty"`
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_a888679467bb7853, []int{1}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *Group) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*WitnessState)(nil), "corepb.WitnessState")
	proto.RegisterType((*Group)(nil), "corepb.Group")
}

func init() { proto.RegisterFile("state.proto", fileDescriptor_a888679467bb7853) }

var fileDescriptor_a888679467bb7853 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x2e, 0x49, 0x2c,
	0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xce, 0x2f, 0x4a, 0x2d, 0x48, 0x52,
	0x0a, 0xe1, 0xe2, 0x09, 0xcf, 0x2c, 0xc9, 0x4b, 0x2d, 0x2e, 0x0e, 0x06, 0xc9, 0x0a, 0x89, 0x73,
	0xb1, 0x97, 0xa4, 0x16, 0xe5, 0xc6, 0x67, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x04, 0xb1,
	0x81, 0xb8, 0x9e, 0x29, 0x42, 0xda, 0x5c, 0x9c, 0xe5, 0x10, 0x85, 0xa9, 0xc5, 0x12, 0x4c, 0x0a,
	0xcc, 0x1a, 0xdc, 0x46, 0xbc, 0x7a, 0x10, 0x43, 0xf4, 0xdc, 0x8b, 0xf2, 0x4b, 0x0b, 0x82, 0x10,
	0xf2, 0x4a, 0x96, 0x5c, 0xac, 0x60, 0x31, 0x21, 0x31, 0x2e, 0xb6, 0xdc, 0xc4, 0xe2, 0x92, 0xd4,
	0x22, 0xb0, 0x69, 0x9c, 0x41, 0x50, 0x9e, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x6e, 0x52, 0x6a,
	0x11, 0xc4, 0x2c, 0xce, 0x20, 0x18, 0x37, 0x89, 0x0d, 0xec, 0x3e, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0x34, 0x22, 0x52, 0xae, 0x00, 0x00, 0x00,
}
